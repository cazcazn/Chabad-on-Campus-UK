<?php

function branches_menu() {
  return array(
    'branches' => array(
      'title' => 'Branches',
      'page callback' => 'branches_page',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
    ),
    'ajax/branches/%' => array(
      'type' => MENU_CALLBACK,
      'page callback' => 'branches_ajax',
      'page arguments' => array(2),
      'access arguments' => array('access content'),
    ),
  );
}

// Work out which node the tax ID is associated with
function branches_ajax($tid) {
  $result = db_query("SELECT entity_id FROM field_data_field_universities WHERE field_universities_tid=:tid;", array('tid' => $tid));
  if($record = $result->fetch()) die($record->entity_id);
}

// Callback function to display the branches page
function branches_page() {
  // Load scripts and css
  $module_path = drupal_get_path('module', 'branches');
  drupal_add_js('http://maps.google.com/maps/api/js?sensor=false');
  drupal_add_js($module_path . '/js/map.js');
  drupal_add_css($module_path . '/css/branches.css');

  // Generate markers to send to javascript
  $markers = branches_generate_markers();

  // Add the array to javascript file
  drupal_add_js(array('branches_markers'=>$markers), 'setting');

  // Generate the info table
  $content['info'] = branches_generate_info($markers);
  $content['unis'] = render(drupal_get_form('branches_universities_form'));

  // Render the theme
  return theme('branches', $content);
}

function branches_universities_form() {
  $tax = array(0 => 'Select a university...');
  $tax += db_query("SELECT tid, name FROM taxonomy_term_data WHERE vid=:vid ORDER BY name;", array('vid' => 3))
    ->fetchAllKeyed();
    
  return array(
    'unis' => array(
      '#type'=>'select',
      '#title'=>'Universities',
      '#options' => $tax,
      '#default_value' => 0,
    )
  );
}

function branches_generate_info($markers) {
  $html = '<table>';
  foreach($markers as $k => $m) {
    $html .= '<tr class="branch-' . $k . '"><td><span><b><a href="' . $m['link'] . '">' . $m['title'] . '</a></b></span>';
    $html .= '<span>' . $m['shluchim'] . '</span></td></tr>';
  }
  $html .= '</table>';
  return $html;
}

function branches_generate_markers() {

  // Read in nodes of content type "branches"
  $query = new EntityFieldQuery;

  $query->entityCondition('bundle', 'branch')
    ->entityCondition('entity_type', 'node')
    ->propertyOrderBy('title');

  $result = $query->execute();
  $nodes = node_load_multiple(array_keys($result["node"]));

  // Loop through each and populate array to send to javascript
  $map_info = array();
  $types = array();
  $i = 0;

  foreach($nodes as $node) {
    $nid = $node->nid;
    $map_info[$nid]['title'] = $node->title;
    $map_info[$nid]['lat'] = $node->field_lat["und"][0]["value"];
    $map_info[$nid]['lng'] = $node->field_lng["und"][0]["value"];
    $map_info[$nid]['link'] = drupal_lookup_path('alias' , 'node/' . $node->nid);
    $map_info[$nid]['shluchim'] = $node->field_shluchim["und"][0]["value"];
  }

  return $map_info;
}

/**
  * Implementation of hook_update().
  */
function branches_node_update($node) {
  if(isset($node->field_unis['und'][0])) {
    foreach($node->field_unis['und'] as $uni) {
      // Check that the term isn't already on the list
      $tax = taxonomy_get_term_by_name($uni['value']);
      if(empty($tax)) {
        $t = new stdClass;
        $t->vid = 3;
        $t->name = $uni['value'];
        $t->vocabulary_machine_name = 'universities';
        taxonomy_term_save($t);
      }
    }
  }
}

function branches_block_view_branches_universities_served_alter(&$data, $block) {
  $node = node_load(arg(1));
  
  if(isset($node->field_universities['und'])) {
    $distances = array();
    $paths = array();
    
    // Calculate the Haversine distance for each university and create an array
    foreach($node->field_universities['und'] as $u) {
      $t = taxonomy_term_load($u['tid']);
      dpm($u);
      
      if(isset($t->field_lat['und']) && isset($t->field_lng['und'])) {
        $distance = common_stuff_haversine(
          array(
            'lat' => $node->field_lat['und'][0]['value'],
            'lng' => $node->field_lng['und'][0]['value'],
          ),
          array(
            'lat' => $t->field_lat['und'][0]['value'],
            'lng' => $t->field_lng['und'][0]['value'],
          )
        );
        $distances[$u['tid']] = $distance;
      }
      else $distances[$u['tid']] = 999;
      $paths[$u['tid']] = l(t($t->name), drupal_get_path_alias('taxonomy/term/' . $t->tid)) . ' (' . $distances[$u['tid']] . ' miles)';
    }
    
    array_multisort($distances, SORT_ASC, $paths);

    $data['subject'] = NULL;
    $data['content'] = array(
      'universities_served' => array(
        '#markup' => theme('item_list', array('items' => $paths)),
      ),
    );
  }
}

function branches_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  dpm($items);
}

/**
  * Implementation of hook_block_info().
  */
function branches_block_info() {
  return array(
    'universities_served' => array(
      'info' => 'Universities served',
      'cache' => DRUPAL_CACHE_PER_PAGE,
    ),
  );
}

/**
  * Implementation of hook_theme().
  */
function branches_theme() {
  return array(
    'branches' => array(
      'arguments' => array('content' => NULL),
      'template' => 'branches',
    ),
  );
}
